// Code generated by ent, DO NOT EDIT.

package order

import (
	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
	"github.com/notmyalias/ogent-custom-ent-enum-issue/ent/predicate"
	"github.com/notmyalias/ogent-custom-ent-enum-issue/ent/schema"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldID, id))
}

// ItemTypeExample1EQ applies the EQ predicate on the "item_type_example_1" field.
func ItemTypeExample1EQ(v schema.ItemType) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldItemTypeExample1, v))
}

// ItemTypeExample1NEQ applies the NEQ predicate on the "item_type_example_1" field.
func ItemTypeExample1NEQ(v schema.ItemType) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldItemTypeExample1, v))
}

// ItemTypeExample1In applies the In predicate on the "item_type_example_1" field.
func ItemTypeExample1In(vs ...schema.ItemType) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldItemTypeExample1, vs...))
}

// ItemTypeExample1NotIn applies the NotIn predicate on the "item_type_example_1" field.
func ItemTypeExample1NotIn(vs ...schema.ItemType) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldItemTypeExample1, vs...))
}

// ItemTypeExample2EQ applies the EQ predicate on the "item_type_example_2" field.
func ItemTypeExample2EQ(v schema.ItemType) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldItemTypeExample2, v))
}

// ItemTypeExample2NEQ applies the NEQ predicate on the "item_type_example_2" field.
func ItemTypeExample2NEQ(v schema.ItemType) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldItemTypeExample2, v))
}

// ItemTypeExample2In applies the In predicate on the "item_type_example_2" field.
func ItemTypeExample2In(vs ...schema.ItemType) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldItemTypeExample2, vs...))
}

// ItemTypeExample2NotIn applies the NotIn predicate on the "item_type_example_2" field.
func ItemTypeExample2NotIn(vs ...schema.ItemType) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldItemTypeExample2, vs...))
}

// ItemTypeExample3EQ applies the EQ predicate on the "item_type_example_3" field.
func ItemTypeExample3EQ(v schema.StructItemType) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldItemTypeExample3, v))
}

// ItemTypeExample3NEQ applies the NEQ predicate on the "item_type_example_3" field.
func ItemTypeExample3NEQ(v schema.StructItemType) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldItemTypeExample3, v))
}

// ItemTypeExample3In applies the In predicate on the "item_type_example_3" field.
func ItemTypeExample3In(vs ...schema.StructItemType) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldItemTypeExample3, vs...))
}

// ItemTypeExample3NotIn applies the NotIn predicate on the "item_type_example_3" field.
func ItemTypeExample3NotIn(vs ...schema.StructItemType) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldItemTypeExample3, vs...))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Order) predicate.Order {
	return predicate.Order(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Order) predicate.Order {
	return predicate.Order(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Order) predicate.Order {
	return predicate.Order(func(s *sql.Selector) {
		p(s.Not())
	})
}
