// Code generated by ent, DO NOT EDIT.

package order

import (
	"fmt"

	"github.com/google/uuid"
	"github.com/notmyalias/ogent-custom-ent-enum-issue/ent/schema"
)

const (
	// Label holds the string label denoting the order type in the database.
	Label = "order"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldItemTypeExample1 holds the string denoting the item_type_example_1 field in the database.
	FieldItemTypeExample1 = "item_type_example_1"
	// FieldItemTypeExample2 holds the string denoting the item_type_example_2 field in the database.
	FieldItemTypeExample2 = "item_type_example_2"
	// FieldItemTypeExample3 holds the string denoting the item_type_example_3 field in the database.
	FieldItemTypeExample3 = "item_type_example_3"
	// Table holds the table name of the order in the database.
	Table = "orders"
)

// Columns holds all SQL columns for order fields.
var Columns = []string{
	FieldID,
	FieldItemTypeExample1,
	FieldItemTypeExample2,
	FieldItemTypeExample3,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)

// ItemTypeExample1Validator is a validator for the "item_type_example_1" field enum values. It is called by the builders before save.
func ItemTypeExample1Validator(item_type_example_ schema.ItemType) error {
	switch item_type_example_.String() {
	case "PHYSICAL", "DIGITAL", "SERVICE":
		return nil
	default:
		return fmt.Errorf("order: invalid enum value for item_type_example_1 field: %q", item_type_example_)
	}
}

// ItemTypeExample2Validator is a validator for the "item_type_example_2" field enum values. It is called by the builders before save.
func ItemTypeExample2Validator(item_type_example_ schema.ItemType) error {
	switch item_type_example_.String() {
	case "PHYSICAL", "DIGITAL", "SERVICE":
		return nil
	default:
		return fmt.Errorf("order: invalid enum value for item_type_example_2 field: %q", item_type_example_)
	}
}

// ItemTypeExample3Validator is a validator for the "item_type_example_3" field enum values. It is called by the builders before save.
func ItemTypeExample3Validator(item_type_example_ schema.StructItemType) error {
	switch item_type_example_.String() {
	case "PHYSICAL", "DIGITAL", "SERVICE":
		return nil
	default:
		return fmt.Errorf("order: invalid enum value for item_type_example_3 field: %q", item_type_example_)
	}
}
